Learn some characters

1#################
Match one character
.

a
b
c
d


sd
gs
esdfsdfsdf


 
3##########################
 
Dropping Anchor
the carrot indicates a forced beginning of the line
a dollar sign indicates a forced end of the line
 
^drop$
 
drop
 
raise
 
4################################
Ends in Period
and escaped period indicates a period (\.)
a dollar sign indicates a forced end of the line
 
\.$
 
1.
 
!
1.0
 
5###########################
One of many characters

If you want any number of characters to match, list them in square brackets &quote;[]&quote;



6###########################
Does not end in period
a carrot inside of square brackets indicates all letters typed in the square brackets are not matched
most things inside square brackets don't need to be escaped. 
A hyphen does need escape, because that represents a range eg, [0-9] or [a-0] for [a-zA-Z0-9]
 
[^.]$
 
 
 07###########################
A period exists mid-sentence
A period represents any character.
A pattern is either a single character, or a group of characters inside a set of parenthesis
A pattern repeated one or more times is represented by the asterisk character + following the pattern: eg1: a+ would match a or aaaa. eg2: (ab)+ would match ab or ababab
 
 
8############################
Sometimes a comma
a pattern can pass if it matches or not with the ?
 
^1,?000$
 
1000
1,000
 
 
9############################
Ends with comma separated zeros
A pattern can such as (,000) can be specified to repeat many times, or not repeat at all with an asterisk
 
1(,000)*$
 
1
1,000
1,000,000
1,000,000,000
 
 
10############################
Contains only numbers
Individual numbers can be specified one at a time in square brackets [0123456789]
Number ranges can be specified with the hyphen in square brackets [0-9]
 
^[0-9]+$
 
1
223
23
 
a2
34cat
 
 
 
11#############################
A capture repeats
repetition is specified by placing the number of times a pattern repeats in curly brackets like ".{3}"
a pattern can represent a sequence of multiple characters if surrounded by parenthesis "(ab){3}"
Combine above information and use one or more repetition of any character for the pattern in the parenthesis (.+)
 
triple (.*){3}
 
triple aaa
triple bbb
triple ababab
 
 
 
12#############################
A integer is odd
 
[0-9]*[13579]
 
1
23
335
457
5222222222269
 
 
2
224
22222222226
 
13################################
A comma separated odd number, zero padded
 
([0-9]{3},)*([0-9]{2}[13579])
 
012,345
001
 
0001

 
 
 
14##########################
Contains One string OR another
. The Vertical Pipe for multiple regexs to be matched
 
cat|dog|bee
 
 
cat
dog
bee
tacocat
 
ape
 
 
 

 
 
 
 
 
 
15#########################
Pattern Captures and non captures
	
capture
AcaptureB
CCcaptureDD
 
(?:.+)(capture)(?:.+)
 
 
16#########################
Repeated Captures like variables
you can reference the first capture using \1
you can reference the second capture using \2
 
 
(.+)(.+)\2\1
 
abba
abccab
aaaa

 
abab
abcabc
 
17###############################
1st is 1st and 0th is 0th
(1st|2nd|3rd|[4567890]th).*\1
 
1st is 1st
2nd is 2nd
3rd ohh my 3rd
4th is 4th
5th is 5th
6th is 6th
7th is 7th
8th is 8th
9th is 9th
0th is 0th
 
1st is 2nd
2nd is 3rd
4th is 5th
 
 
18####################################
First word and second word capture
 
([^ ]) ([^ ])
 
19###############################
First Last or Last, First
 
 ([^ ]) ([^ ])|([^ ]), ([^ ])
 
 20#################################
extract numbers in array
 ([0-9])
 
 21#################################
Extract Name Prefix
 (.+\.) .+
 Mr. Smith
Mrs. Steel
Ms. Ferris
23####################################
